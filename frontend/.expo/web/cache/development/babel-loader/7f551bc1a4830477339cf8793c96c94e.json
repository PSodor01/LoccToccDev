{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\pauls\\\\Documents\\\\LoccToccDev\\\\frontend\\\\components\\\\main\\\\Settings.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\nimport * as Analytics from 'expo-firebase-analytics';\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nimport { connect } from 'react-redux';\n\nvar SettingsScreen = function SettingsScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchValue = _useState2[0],\n      setSwitchValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notificationValue = _useState4[0],\n      setNotificationValue = _useState4[1];\n\n  useEffect(function () {\n    analytics().logEvent('screen_view', {\n      screen_name: 'Settings',\n      user_name: props.currentUser.name\n    });\n  }, []);\n\n  var toggleSwitch = function toggleSwitch(value) {\n    setSwitchValue(value);\n  };\n\n  var deleteAccount = function deleteAccount() {\n    var _firebase$auth$curren;\n\n    (_firebase$auth$curren = auth().currentUser) == null ? void 0 : _firebase$auth$curren.delete();\n    analytics().logEvent('deleteAccount', {\n      user_name: props.currentUser.name\n    });\n  };\n\n  var deleteAccountHandler = function deleteAccountHandler() {\n    Alert.alert('Delete Account?', 'This action is permanent, all of your posts and account information will be deleted.', [{\n      text: 'Delete',\n      onPress: function onPress() {\n        return deleteAccount();\n      }\n    }, {\n      text: 'Cancel',\n      onPress: function onPress() {},\n      style: 'cancel'\n    }], {\n      cancelable: true\n    });\n  };\n\n  var notificationFunction = function notificationFunction() {\n    var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status, res;\n\n    return _regeneratorRuntime.async(function notificationFunction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(notificationValue == true)) {\n              _context.next = 5;\n              break;\n            }\n\n            setNotificationValue(false);\n            firestore().collection(\"users\").doc('3THx5eaT6BRJreb2JensMsjRv3O2').update({\n              token: null\n            });\n            _context.next = 32;\n            break;\n\n          case 5:\n            setNotificationValue(true);\n\n            if (!Constants.isDevice) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n          case 9:\n            _await$Notifications$ = _context.sent;\n            existingStatus = _await$Notifications$.status;\n            finalStatus = existingStatus;\n\n            if (!(existingStatus !== 'granted')) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n          case 15:\n            _await$Notifications$2 = _context.sent;\n            status = _await$Notifications$2.status;\n            finalStatus = status;\n\n          case 18:\n            if (!(finalStatus !== 'granted')) {\n              _context.next = 20;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 20:\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 22:\n            token = _context.sent.data;\n            _context.next = 26;\n            break;\n\n          case 25:\n            alert('Must use physical device for Push Notifications');\n\n          case 26:\n            if (!token) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 29;\n            return _regeneratorRuntime.awrap(firestore().collection(\"users\").doc(auth().currentUser.uid).set({\n              token: token\n            }, {\n              merge: true\n            }));\n\n          case 29:\n            res = _context.sent;\n\n          case 30:\n            if (Platform.OS === 'android') {\n              Notifications.setNotificationChannelAsync('default', {\n                name: 'default',\n                importance: Notifications.AndroidImportance.MAX,\n                vibrationPattern: [0, 250, 250, 250],\n                lightColor: '#FF231F7C'\n              });\n            }\n\n            return _context.abrupt(\"return\", token);\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.documentRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: deleteAccountHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, React.createElement(AntDesign, {\n    name: \"deleteuser\",\n    size: 16,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"    Delete Account\"))));\n};\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\"\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    padding: 10\n  },\n  documentRow: {\n    flexDirection: 'row',\n    padding: 10,\n    marginRight: \"5%\",\n    borderBottomColor: \"#e1e2e6\",\n    borderBottomWidth: 1\n  },\n  titleText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  comingSoonText: {\n    alignSelf: 'center',\n    color: 'red'\n  },\n  headerName: {\n    alignSelf: 'center',\n    color: \"#009387\",\n    fontWeight: \"bold\",\n    fontSize: 20,\n    fontStyle: 'italic'\n  },\n  toggleButtonOn: {\n    borderColor: '#228B22',\n    borderWidth: 1,\n    borderRadius: 6,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    alignSelf: \"center\"\n  },\n  buttonTextOn: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    color: '#228B22'\n  },\n  toggleButtonOff: {\n    borderColor: '#BB1E10',\n    borderWidth: 1,\n    borderRadius: 6,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    alignSelf: \"center\"\n  },\n  buttonTextOff: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    color: '#BB1E10'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(SettingsScreen);","map":{"version":3,"names":["React","useState","useEffect","AntDesign","Notifications","Permissions","Constants","Analytics","firebase","require","connect","SettingsScreen","props","switchValue","setSwitchValue","notificationValue","setNotificationValue","logEvent","screen_name","user_name","currentUser","name","toggleSwitch","value","deleteAccount","auth","delete","deleteAccountHandler","Alert","alert","text","onPress","style","cancelable","notificationFunction","firestore","collection","doc","update","token","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","getExpoPushTokenAsync","data","uid","set","merge","res","Platform","OS","setNotificationChannelAsync","importance","AndroidImportance","MAX","vibrationPattern","lightColor","styles","container","documentRow","buttonContainer","StyleSheet","create","mainContainer","flex","backgroundColor","flexDirection","padding","marginRight","borderBottomColor","borderBottomWidth","titleText","fontSize","fontWeight","comingSoonText","alignSelf","color","headerName","fontStyle","toggleButtonOn","borderColor","borderWidth","borderRadius","paddingVertical","paddingHorizontal","buttonTextOn","toggleButtonOff","buttonTextOff","mapStateToProps","store","userState"],"sources":["C:/Users/pauls/Documents/LoccToccDev/frontend/components/main/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Switch, TouchableOpacity, View, Text, Alert } from 'react-native'\r\n\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\n\r\nimport * as Notifications from 'expo-notifications'\r\nimport * as Permissions from 'expo-permissions'\r\nimport Constants from 'expo-constants'\r\n\r\nimport * as Analytics from 'expo-firebase-analytics';\r\n\r\nimport firebase from 'firebase'\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst SettingsScreen = (props) => {\r\n\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const [notificationValue, setNotificationValue] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        /*firestore()\r\n        .collection(\"users\")\r\n        .doc('3THx5eaT6BRJreb2JensMsjRv3O2')\r\n        .get()\r\n        .then((snapshot) => {\r\n            if (snapshot.exists) {\r\n                let userData = snapshot.data();\r\n                let token = userData.token\r\n                setNotificationValue(true)\r\n            }\r\n            else {\r\n                setNotificationValue(false)\r\n            }\r\n        })*/\r\n\r\n        analytics().logEvent('screen_view', { screen_name: 'Settings', user_name: props.currentUser.name });\r\n        \r\n    }, [])\r\n\r\n\r\n\r\n    const toggleSwitch = (value) => {\r\n        setSwitchValue(value)\r\n        \r\n    };\r\n\r\n    const deleteAccount = () => {\r\n        auth().currentUser?.delete();\r\n\r\n        analytics().logEvent('deleteAccount', {user_name: props.currentUser.name});\r\n            \r\n    }\r\n\r\n    const deleteAccountHandler = () => {\r\n        Alert.alert(\r\n            'Delete Account?',\r\n            'This action is permanent, all of your posts and account information will be deleted.',\r\n\r\n            [\r\n                { text: 'Delete', onPress: () => deleteAccount()},\r\n                {\r\n                    text: 'Cancel',\r\n                    onPress: () => {},\r\n                    style: 'cancel',\r\n                },\r\n            ],\r\n            { cancelable: true }\r\n\r\n        )\r\n    }\r\n\r\n    const notificationFunction = async () => {\r\n        if (notificationValue == true) {\r\n\r\n            setNotificationValue(false)\r\n\r\n            firestore()\r\n            .collection(\"users\")\r\n            .doc('3THx5eaT6BRJreb2JensMsjRv3O2')\r\n            .update({\r\n                token: null\r\n            })\r\n\r\n            \r\n            \r\n            \r\n        } else {\r\n\r\n            setNotificationValue(true);\r\n\r\n            let token;\r\n            if (Constants.isDevice) {\r\n            const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n            let finalStatus = existingStatus;\r\n            if (existingStatus !== 'granted') {\r\n                const { status } = await Notifications.requestPermissionsAsync();\r\n                finalStatus = status;\r\n            }\r\n            if (finalStatus !== 'granted') {\r\n                //alert('Failed to get push token for push notification!');\r\n                return;\r\n            }\r\n            token = (await Notifications.getExpoPushTokenAsync()).data;\r\n            } else {\r\n            alert('Must use physical device for Push Notifications');\r\n            }\r\n\r\n            if (token) {\r\n                const res = await firestore()\r\n                    .collection(\"users\")\r\n                    .doc(auth().currentUser.uid)\r\n                    .set({token}, { merge:true });\r\n            }\r\n            \r\n        \r\n            if (Platform.OS === 'android') {\r\n            Notifications.setNotificationChannelAsync('default', {\r\n                name: 'default',\r\n                importance: Notifications.AndroidImportance.MAX,\r\n                vibrationPattern: [0, 250, 250, 250],\r\n                lightColor: '#FF231F7C',\r\n            });\r\n            }\r\n        \r\n            return token;\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.documentRow}>\r\n                <TouchableOpacity\r\n                    style={styles.buttonContainer}\r\n                    onPress={deleteAccountHandler}>\r\n                    <AntDesign name={\"deleteuser\"} size={16} color={\"black\"}/>\r\n                    <Text>    Delete Account</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n        \r\n    )\r\n    \r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        padding: 10,\r\n    },\r\n    documentRow: {\r\n        flexDirection: 'row',\r\n        padding: 10,\r\n        marginRight: \"5%\",\r\n        borderBottomColor: \"#e1e2e6\",\r\n        borderBottomWidth: 1,\r\n    },\r\n    titleText: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    comingSoonText: {\r\n        alignSelf: 'center',\r\n        color: 'red',\r\n    },\r\n    headerName: {\r\n        alignSelf: 'center',\r\n        color: \"#009387\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20,\r\n        fontStyle: 'italic'\r\n    }, \r\n    toggleButtonOn: {\r\n        borderColor: '#228B22',\r\n        borderWidth: 1,\r\n        borderRadius: 6,\r\n        paddingVertical: 8,\r\n        paddingHorizontal: 12,\r\n        alignSelf: \"center\",\r\n    },\r\n    buttonTextOn: {\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n        color: '#228B22'\r\n    },\r\n    toggleButtonOff: {\r\n        borderColor: '#BB1E10',\r\n        borderWidth: 1,\r\n        borderRadius: 6,\r\n        paddingVertical: 8,\r\n        paddingHorizontal: 12,\r\n        alignSelf: \"center\",\r\n    },\r\n    buttonTextOff: {\r\n        fontWeight: 'bold',\r\n        fontSize: 16,\r\n        color: '#BB1E10'\r\n    }\r\n    \r\n    \r\n})\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps)(SettingsScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module"}